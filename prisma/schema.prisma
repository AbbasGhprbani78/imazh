datasource db {
  provider = "sqlite"
  url      = "file:./dev.db?connection_limit=1&timeout=30000" 
}

generator client {
  provider = "prisma-client-js"
}


model Archive {
  id          Int       @id @default(autoincrement())
  operationId Int
  settingId   Int
  customerId  Int
  status      Int       @default(1)
  date1       DateTime  @default(now())
  date2      DateTime? // Nullable field

  customer    Customer  @relation(fields: [customerId], references: [id])
  operation   Operation @relation(fields: [operationId], references: [id])
  setting     Setting   @relation(fields: [settingId], references: [id])
  photos      Photo[]   // Relation to Photo model
  isDelete    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Operation {
  id        Int       @id @default(autoincrement())
  operation String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  archives  Archive[] // رابطه معکوس به مدل Archive
}

model Photo {
  id          Int       @id @default(autoincrement())
  url         String
  archiveId   Int
  group       Int       // 1 for photos1, 2 for photos2
  archive     Archive   @relation(fields: [archiveId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


model Customer {
  id            Int       @id @default(autoincrement())
  fullname      String
  email         String    @unique
  phonenumber   String    @unique
  nationalcode  String    @unique
  datereference DateTime
  birthday      DateTime
  filenumber    String    @unique
  gender        String    @default("men")
  isDelete    Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  archives      Archive[] // رابطه معکوس به مدل Archive
}



model Setting {
  id          Int      @id @default(autoincrement())
  name        String
  description String?   
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  archives    Archive[] // رابطه معکوس به مدل Archive
}

model User {
  id                 Int       @id @default(autoincrement())
  username           String    @unique
  password           String
  role               String   
  resetCode          String?   // nullable
  resetCodeExpiration DateTime? // nullable
  img                String?   // nullable
  themecolor         Color?    @relation(fields: [themecolorId], references: [id])
  themecolorId       Int?      // optional field for relation to Color model
  refreshToken       String?   // nullable
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

}


model Color {
  id        Int      @id @default(autoincrement())
  color     String  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]   // رابطه معکوس به مدل User
}
